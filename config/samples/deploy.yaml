---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/instance: kaoto-standalone
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kaoto-operator
    app.kubernetes.io/part-of: kaoto-operator
    app.kubernetes.io/managed-by: kustomize
  name: kaoto-standalone
  namespace: kaoto
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/instance: kaoto-standalone
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kaoto-team
    app.kubernetes.io/part-of: kaoto
    app.kubernetes.io/managed-by: kustomize
  name: kaoto-camel-k
rules:
  - apiGroups:
      - camel.apache.org
    resources:
      - kameletbindings
      - integrations
      - kamelets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/instance: kaoto-standalone
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kaoto-team
    app.kubernetes.io/part-of: kaoto
    app.kubernetes.io/managed-by: kustomize
  name: kaoto-standalone
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kaoto-camel-k
subjects:
- kind: ServiceAccount
  name: kaoto-standalone
  namespace: kaoto
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: designer
    app.kubernetes.io/instance: kaoto-standalone
    app.kubernetes.io/managed-by: kaoto-team
    app.kubernetes.io/name: kaoto
    app.kubernetes.io/part-of: kaoto
  name: kaoto
  namespace: kaoto
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: designer
      app.kubernetes.io/instance: kaoto-standalone
      app.kubernetes.io/managed-by: kaoto-team
      app.kubernetes.io/name: kaoto
      app.kubernetes.io/part-of: kaoto
  template:
    metadata:
      labels:
        app.kubernetes.io/component: designer
        app.kubernetes.io/instance: kaoto-standalone
        app.kubernetes.io/managed-by: kaoto-team
        app.kubernetes.io/name: kaoto
        app.kubernetes.io/part-of: kaoto
    spec:
      serviceAccountName: kaoto-standalone
      containers:
      - env:  
          - name: QUARKUS_HTTP_CORS_ORIGINS
            value: "https://kaoto-stable-kaoto.mariasde-cluster-c22fc5e8e66e9470d8f58db21c47bfd0-0000.eu-de.containers.appdomain.cloud"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
        image: 'docker.io/kaotoio/standalone@sha256:89c290c656440b9e62363c9dd341c454cf3fee5f7631c61f859eef052e5883ed'
        imagePullPolicy: Always
        name: standalone
        ports:
          - containerPort: 8081
            name: http
            protocol: TCP
        resources:
          limits:
            cpu: "1000m"
            memory: "600Mi"
          requests:
            cpu: "500m"
            memory: "600Mi"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: designer
    app.kubernetes.io/instance: kaoto-standalone
    app.kubernetes.io/managed-by: kaoto-team
    app.kubernetes.io/name: kaoto
    app.kubernetes.io/part-of: kaoto
  name: kaoto
  namespace: kaoto
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8081
  selector:
    app.kubernetes.io/instance: kaoto-standalone
    app.kubernetes.io/name: kaoto
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: kaoto-stable
  namespace: kaoto
  labels:
    app.kubernetes.io/component: designer
    app.kubernetes.io/instance: kaoto-standalone
    app.kubernetes.io/managed-by: kaoto-team
    app.kubernetes.io/name: kaoto
    app.kubernetes.io/part-of: kaoto
spec:
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  to:
    kind: Service
    name: kaoto
  port:
    targetPort: 8081
